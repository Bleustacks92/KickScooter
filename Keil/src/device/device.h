// #INDEX# ======================================================================================================
// Title .........: device - Набор команд для управления платой.
// Arch ..........: GD32F130C8C6, GD32F130C6C6
// Author ........: GreenBytes ( https://vk.com/greenbytes )
// Version .......: 3.5.0.0
// ==============================================================================================================

#ifndef DEVICE_H

    #define DEVICE_H

	#include "gd32f1x0.h"
	#include "../framework/board/board.h"
	#include "../framework/framework.h"
	#include "../config/config.h"
	#include "../BLDC/bldc.h"

	/* # Константы # */

	# define BUTTON_NONE										0x00
	# define BUTTON_OK											0x01
	# define BUTTON_HOLD										0x02

	/* # Структуры # */

	/* Структура датчика тока */
	typedef struct {
		/* Таймер */
		uint32_t time;
		/* Количество записей */
		uint32_t tick;
		/* Сумма значений */
		uint32_t read;
		/* Смещение */
		int16_t balance;
		/* Отфильтрованное значение тока */
        int16_t current;
	} current_t;

	/* Структура аналогово задания */
	typedef struct {
		/* Таймер */
		uint32_t time;
		/* Количество записей */
		uint16_t tick;
		/* Сумма значений */
		uint32_t read;
		/* Лимитированное значение */
		uint16_t limit;
		/* Отфильтрованное значение */
		uint16_t throttle;
	} throttle_t;

	/* Структура курка тормоза */
	typedef struct {
		/* Таймер */
		uint32_t time;
		/* Количество записей */
		uint16_t tick;
		/* Сумма значений */
		uint32_t read;
		/* Лимитированное значение */
		uint16_t limit;
		/* Отфильтрованное значение */
		uint16_t brake;
	} brake_t;

	/* Структура датчика фаз */
	typedef struct {
		uint16_t in;
		uint16_t updateTick;
		int32_t update;
		uint16_t  offset;
		/* Отфильтрованное значение */
		int16_t phase;
	} phase_t;

    /* # Описание процедур # */

	// #DEVICE# ---------------------------------------------------
	// Description....: Датчик напряжения ( Vbat )
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint16_t devVoltage(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Датчик тока
	// Argument.......: Нет
	// ------------------------------------------------------------
	int16_t devCurrent(void);

	int16_t devPhaseA(void);
	int16_t devPhaseB(void);
	int16_t devPhaseC(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Датчик единиц холлов
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint8_t devHall(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Кнопка управления
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint8_t devPress(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Включение платы
	// Argument.......: 
	//		FlagStatus tn		= Статус включения _
	//				ON			= Включение устройства
	//				OFF			= Выключение устройства
	// ------------------------------------------------------------
	void devTurn(FlagStatus tn);

	// #DEVICE# ---------------------------------------------------
	// Description....: Подача питания на плату (индикатор З/У)
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint8_t devCharge(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Аналоговое задание
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint16_t devThrottle(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Тормоз
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint16_t devBrake(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: PWM задание
	// Argument.......: Нет
	// ------------------------------------------------------------
	uint16_t devPWM(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Расчет датчика тока
	// Argument.......: Нет
	// ------------------------------------------------------------
	void devEventCurrent(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Расчет аналогово задания
	// Argument.......: Нет
	// ------------------------------------------------------------
	void devEventThrottle(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Событие таймера
	// Argument.......: Нет
	// ------------------------------------------------------------
	void devEventADC(void);

	void devEventTimer(void);

	// #DEVICE# ---------------------------------------------------
	// Description....: Инициализация
	// Argument.......: Нет
	// ------------------------------------------------------------
	void dev_init(void);

	void dev_loop(void);

#endif
