// #INDEX# ======================================================================================================
// Title .........: config - Конфигурация устройства.
// Arch ..........: GD32F130C8C6, GD32F130C6C6
// Author ........: GreenBytes ( https://vk.com/greenbytes )
// Version .......: 3.5.0.0
// ==============================================================================================================

#ifndef CONFIG_H

    #define CONFIG_H

    #include "gd32f1x0.h"
    #include "config.h"
    #include "../framework/framework.h"
    #include "../device/device.h"
    #include "../BLDC/bldc.h"

    /* # Структуры # */

    /* Структура конфигурации */
    #pragma pack(push, 1)
	typedef struct {
        /* Расположение фаз */
		uint8_t     phase;
        /* Тип управления (ENGINE_CONTROL_PWM) */
        uint8_t     control;
        /* Тип ШИМ подаваемый на двигатель (ENGINE_PWM_SINMOD) */
        uint8_t     pwm;
        /* Установка градусность холлов (ENGINE_HALL_120) */
        uint8_t     hall;
        /* Инерция двигателя (TRUE) */
        uint8_t     inertion;
        /* Сторона движения двигателя */
		uint8_t     reverse;
        /* Кол-во магнитов */
        uint8_t     magnet;
        /* Ослабление поля (FALSE) */
        uint8_t     fw;
        /* Максимальный угол опережения */
        uint8_t     fwcorner;
        /* Максимальный ток ослабления */
        uint16_t    fwcurrent;
        /* С каких оборотов начнет работать ослабление поля */
        uint16_t    fwturn;
        /* Максимальный фазный ток в А */
        uint16_t    phaseCurrent;
        /* Максимальный общий ток в А */
        uint16_t    current;
        /* Максимальные обороты */
        uint16_t    turnMax;
        /* Максимальный ток торможения */
        uint16_t    brakeCurrent;
        /* Диаметр колеса */
        uint16_t    wheelDiameter;
        /* Минимальная позиция аналогово задания в попугаях */
        uint16_t    throttleMin;
        /* Максимальная позиция аналогово задания в попугаях */
        uint16_t    throttleMax;
        /* Минимальная позиция тормоза в попугаях */
        uint16_t    brakeMin;
        /* Максимальная позиция тормоза в попугаях */
        uint16_t    brakeMax;
        /* Минимальное напряжение (отключает двигатель) */
        uint16_t    voltageMin;
        /* Минимальное напряжение для информарования о разряде АКБ */
        uint16_t    voltageMid;
        /* Максимальное напряжение АКБ, информирование о перезаряде */
        uint16_t    voltageMax;
        /* Плавность задания аналогово задания */
        uint8_t     throttlePID;
        /* Плавность срабатывания торможения */
        uint8_t     breakPID;
        /* Количество попугаев на 1 Вольт * */
        uint16_t    bitVoltage;
        /* Количество попугаев на 1 Ампер ** */
        uint16_t    bitCurrent;

        uint8_t     bitByte;
        uint32_t    bitData;
	} config_t;
    #pragma pack(pop)


    /* # Описание процедур # */

    // #config# ---------------------------------------------------
	// Description....: Инициализация
	// Argument.......: Нет
	// ------------------------------------------------------------
    void conf_init(void);

    // #config# ---------------------------------------------------
	// Description....: Задание настроек по умолчанию
	// Argument.......: Нет
	// ------------------------------------------------------------
    void confDefine(void);

    // #config# ---------------------------------------------------
	// Description....: Чтение настроек из памяти процессора
	// Argument.......: Нет
	// ------------------------------------------------------------
    void confRead(void);

    // #config# ---------------------------------------------------
	// Description....: Запись настроек в память процесора
	// Argument.......: Нет
	// ------------------------------------------------------------
    void confWrite(void);

    void confErase(void);
    
#endif
